@page "/"
@rendermode InteractiveServer
@using System.Security.Claims
@using Microsoft.AspNetCore.Components.Authorization
@inject AuthenticationStateProvider AuthenticationStateProvider

<PageTitle>Home</PageTitle>

<AuthorizeView>
    <Authorized>
        hello
    </Authorized>
    <NotAuthorized>
        Goodbye
    </NotAuthorized>
</AuthorizeView>

<p>@_surnameMessage</p>
    
@code {
    private string _authMessage;
    private string _surnameMessage;
    private IEnumerable<Claim> _claims = Enumerable.Empty<Claim>();

    public async Task GetClaimsPrincipalData()
    {
        var authState = await ((DmToolsAuthenticationStateProvider)AuthenticationStateProvider).GetAuthenticationStateAsync();
        
        var user = authState.User;

        if (user.Identity.IsAuthenticated)
        {
            _authMessage = $"{user.Identity.Name} is authenticated.";
            _claims = user.Claims;
            _surnameMessage =
                $"Surname: {user.FindFirst(c => c.Type == ClaimTypes.Surname)?.Value}";
        }
        else
        {
            _authMessage = "The user is NOT authenticated.";
        }
    }
}